// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id        Int @id @default(autoincrement())
  name      String
  lastname  String
  username  String @unique
  email     String @unique
  playlists Playlist[]
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Playlist{
  id          Int @id @default(autoincrement())
  name        String
  description String 
  user        User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  songs       PlaylistSong[]
  createAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Song{
  id        Int @id @default(autoincrement())
  title     String
  artist    String
  album     String
  duration  Int
  cover     String
  metadata  String
  playlists PlaylistSong[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PlaylistSong {
  id         Int @id @default(autoincrement())
  position   Int
  playlistId Int  
  playlist   Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  songId     Int   
  song       Song     @relation(fields: [songId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([playlistId, songId])
}
